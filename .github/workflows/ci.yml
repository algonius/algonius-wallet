name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # Build and test native host
  native-host:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: native

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: native/go.mod

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.59.1
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Build native host
        run: make build

      - name: Lint native host
        run: make lint

      - name: Unit test native host
        run: make unit-test

      - name: Integration test native host
        run: make integration-test-all

      - name: Upload native host binary
        uses: actions/upload-artifact@v4
        with:
          name: native-host-binary
          path: native/bin/
          retention-days: 1

  # Build and test extension (without e2e)
  extension:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install dependencies
        run: npm ci

      - name: Lint extension
        run: npm run lint

      - name: Build extension
        run: npm run build

      - name: Test extension (unit tests)
        run: npm run test:ci

      - name: Upload extension build
        uses: actions/upload-artifact@v4
        with:
          name: extension-build
          path: dist/
          retention-days: 1

  # E2E tests that require both native host and extension
  e2e-tests:
    runs-on: ubuntu-latest
    needs: [native-host, extension]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install dependencies
        run: npm ci

      - name: Download native host binary
        uses: actions/download-artifact@v4
        with:
          name: native-host-binary
          path: native/bin/

      - name: Download extension build
        uses: actions/download-artifact@v4
        with:
          name: extension-build
          path: dist/

      - name: Make native host binary executable
        run: chmod +x native/bin/*

      - name: Install native host for the extension
        run: |
          # Install the native host in the standard location for Chrome extensions
          mkdir -p $HOME/.algonius-wallet/bin
          cp native/bin/algonius-wallet-host $HOME/.algonius-wallet/bin/
          chmod 755 $HOME/.algonius-wallet/bin/algonius-wallet-host
          
          # Create native host manifest in both Chrome and Chromium directories
          # Note: The native host name should match what's used in McpHostManager.ts
          mkdir -p $HOME/.config/google-chrome/NativeMessagingHosts
          mkdir -p $HOME/.config/chromium/NativeMessagingHosts
          
          MANIFEST_CONTENT='{
            "name": "ai.algonius.wallet",
            "description": "Algonius Wallet Native Host",
            "path": "'"$HOME/.algonius-wallet/bin/algonius-wallet-host"'",
            "type": "stdio",
            "allowed_origins": [
              "chrome-extension://abcdefghijklmnopqrstuvwxyz012345/"
            ]
          }'
          
          echo "$MANIFEST_CONTENT" > $HOME/.config/google-chrome/NativeMessagingHosts/ai.algonius.wallet.json
          echo "$MANIFEST_CONTENT" > $HOME/.config/chromium/NativeMessagingHosts/ai.algonius.wallet.json
          
          # Also create in legacy location for compatibility
          mkdir -p $HOME/.algonius-wallet
          echo "$MANIFEST_CONTENT" > $HOME/.algonius-wallet/ai.algonius.wallet.json
          
          # Test native host binary
          echo "Testing native host binary..."
          $HOME/.algonius-wallet/bin/algonius-wallet-host --version || echo "Version command failed, but binary exists"
          echo "Native host binary directory:"
          ls -la $HOME/.algonius-wallet/bin/
          echo "Chrome native messaging hosts:"
          ls -la $HOME/.config/google-chrome/NativeMessagingHosts/ || echo "Chrome directory not found"
          echo "Chromium native messaging hosts:"
          ls -la $HOME/.config/chromium/NativeMessagingHosts/ || echo "Chromium directory not found"
          echo "Legacy manifest location:"
          ls -la $HOME/.algonius-wallet/*.json || echo "No manifests in legacy location"

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium

      - name: Run E2E tests
        run: npm run test:e2e

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7